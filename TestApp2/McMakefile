CXX   = g++ 
CC    = gcc
LDFLAGS += -pthread -lGL -lGLU -lz  -lx264 -lz -lx264 -lmp3lame -L/usr/lib64 -ldl -lX11 -lXmu -lglut -fPIC -llzma  -lasound  -lpng -lvdpau -lfaac 
debug: CFLAGS  = -g  -DINIT_CUDA_GL=1 -D _LIN -D _LIB_MODE  
release: CFLAGS  =  -DINIT_CUDA_GL=1 -D _LIN -O3
debug: exec
release: exec
INC = -L../../ffmpeg-3.2.5/so64 -I../../ffmpeg-3.2.5 -I/Projects -I../jsoncpp/include -I/Projects
LIB = ../../ffmpeg-3.2.5/libs64
INCL = -I../../ffmpeg-3.2.5 -I../jsoncpp/include


OBJS = /Projects/vSystem/VS_Reader.o /Projects/vSystem/nv_helper.o /Projects/vSystem/VS_Controller.o /Projects/vSystem/VS_Sound.o main.o /Projects/vSystem/Cuda_src/dynlink_cuda.o /Projects/vSystem/Cuda_src/dynlink_nvcuvid.o /Projects/vSystem/Cuda_src/cudaModuleMgr.o  ../jsoncpp/src/lib_json/json_reader.o ../jsoncpp/src/lib_json/json_value.o ../jsoncpp/src/lib_json/json_writer.o

TARGET = mc_player



all: exec
exec: $(TARGET)

.cpp.o:
	$(CXX) $(CFLAGS) $(INC) -c $< -o $@ 2> sk
.c.o: 
	$(CC) $(CFLAGS) $(INC) -c $< -o $@ 2> sk


$(TARGET):  $(OBJS) 
	$(CXX) -o $@  $(OBJS) $(INC) $(LDFLAGS) $(LIB)/libavcodec.a $(LIB)/libavformat.a $(LIB)/libavutil.a $(LIB)/libswscale.a $(LIB)/libavcodec.a $(LIB)/libavutil.a $(LIB)/libswresample.a $(LIB)/libavresample.a -lGLEW 2>sk
 
